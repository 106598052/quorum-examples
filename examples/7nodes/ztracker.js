// Copyright 2017 Zerocoin Electric Coin Company LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// =================================
// START: Web3 deploy code
// =================================

var ztoken_abi = web3.eth.contract([{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"type":"function","payable":true},{"constant":false,"inputs":[{"name":"v","type":"uint256"},{"name":"n","type":"uint256"}],"name":"rightShift","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true},{"constant":true,"inputs":[{"name":"left","type":"bytes32"},{"name":"right","type":"bytes32"}],"name":"combine","outputs":[{"name":"","type":"bytes32"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"shieldedTxCapacity","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true},{"constant":false,"inputs":[{"name":"target","type":"address"},{"name":"amount","type":"uint256"}],"name":"mint","outputs":[],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"shieldedTransferCount","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true},{"constant":true,"inputs":[{"name":"cm","type":"bytes32"}],"name":"getWitness","outputs":[{"name":"","type":"uint256"},{"name":"","type":"bytes32[]"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"available","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"unshieldingCount","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true},{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"send_nf","type":"bytes32"},{"name":"cm","type":"bytes32"},{"name":"value","type":"uint64"}],"name":"shield","outputs":[],"type":"function","payable":true},{"constant":false,"inputs":[{"name":"v","type":"uint256"},{"name":"n","type":"uint256"}],"name":"leftShift","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"capacity","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true},{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"anchor","type":"bytes32"},{"name":"spend_nf_1","type":"bytes32"},{"name":"spend_nf_2","type":"bytes32"},{"name":"send_nf_1","type":"bytes32"},{"name":"send_nf_2","type":"bytes32"},{"name":"cm_1","type":"bytes32"},{"name":"cm_2","type":"bytes32"}],"name":"shieldedTransfer","outputs":[],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"shieldedTxAvailable","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"depth","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"getEmptyRoots","outputs":[{"name":"","type":"bytes32[]"}],"type":"function","payable":true},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"shieldingCount","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true},{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"spend_nf","type":"bytes32"},{"name":"cm","type":"bytes32"},{"name":"rt","type":"bytes32"},{"name":"value","type":"uint64"}],"name":"unshield","outputs":[],"type":"function","payable":true},{"constant":true,"inputs":[{"name":"cm","type":"bytes32"}],"name":"commitmentExists","outputs":[{"name":"","type":"bool"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"size","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true},{"constant":false,"inputs":[{"name":"cm","type":"bytes32"}],"name":"addCommitment","outputs":[],"type":"function","payable":true},{"constant":true,"inputs":[{"name":"depth","type":"uint256"}],"name":"getEmptyRoot","outputs":[{"name":"","type":"bytes32"}],"type":"function","payable":true},{"constant":false,"inputs":[{"name":"recipient","type":"address"},{"name":"value","type":"uint256"}],"name":"transfer","outputs":[],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"balance","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true},{"constant":true,"inputs":[{"name":"cm","type":"bytes32"}],"name":"getLeafIndex","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"ZTOKEN_TREE_DEPTH","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true},{"constant":true,"inputs":[{"name":"index","type":"uint256"}],"name":"getCommitmentAtLeafIndex","outputs":[{"name":"","type":"bytes32"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"root","outputs":[{"name":"","type":"bytes32"}],"type":"function","payable":true},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"type":"function","payable":true},{"inputs":[{"name":"initialSupply","type":"uint256"},{"name":"tokenName","type":"string"}],"type":"constructor","payable":true},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"LogTransfer","type":"event","payable":true},{"anonymous":false,"inputs":[{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"LogMint","type":"event","payable":true},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"},{"indexed":false,"name":"uuid","type":"bytes32"}],"name":"LogShielding","type":"event","payable":true},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"},{"indexed":false,"name":"uuid","type":"bytes32"}],"name":"LogUnshielding","type":"event","payable":true},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":false,"name":"uuid_1","type":"bytes32"},{"indexed":false,"name":"uuid_2","type":"bytes32"}],"name":"LogShieldedTransfer","type":"event","payable":true},{"type":"fallback","payable":true}]);

var zprivatecontract_abi = web3.eth.contract([{"constant":true,"inputs":[],"name":"paymentReceivedByAsker","outputs":[{"name":"","type":"bytes32"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"bidderConstellationAddress","outputs":[{"name":"","type":"string"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"randomness","outputs":[{"name":"","type":"bytes32"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"paymentReceivedByBidder","outputs":[{"name":"","type":"bytes32"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"bidderApk","outputs":[{"name":"","type":"bytes32"}],"type":"function","payable":true},{"constant":false,"inputs":[{"name":"rho","type":"bytes32"}],"name":"submitPaymentDetails","outputs":[],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"askAmount","outputs":[{"name":"","type":"uint64"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"type":"function","payable":true},{"constant":false,"inputs":[{"name":"apk","type":"bytes32"},{"name":"r","type":"bytes32"}],"name":"acceptBid","outputs":[{"name":"result","type":"bool"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"bidAmount","outputs":[{"name":"","type":"uint64"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"state","outputs":[{"name":"","type":"uint8"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"asker","outputs":[{"name":"","type":"address"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"askerConstellationAddress","outputs":[{"name":"","type":"string"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"bidTokenAddress","outputs":[{"name":"","type":"address"}],"type":"function","payable":true},{"constant":false,"inputs":[{"name":"rho","type":"bytes32"}],"name":"submitSettlementDetails","outputs":[],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"askerApk","outputs":[{"name":"","type":"bytes32"}],"type":"function","payable":true},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"bidder","outputs":[{"name":"","type":"address"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"askTokenAddress","outputs":[{"name":"","type":"address"}],"type":"function","payable":true},{"inputs":[{"name":"apk","type":"bytes32"},{"name":"r","type":"bytes32"},{"name":"bid_constellation","type":"string"},{"name":"bid_address","type":"address"},{"name":"bid_amount","type":"uint64"},{"name":"ask_constellation","type":"string"},{"name":"ask_address","type":"address"},{"name":"ask_amount","type":"uint64"}],"type":"constructor","payable":true},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"},{"indexed":false,"name":"_amount","type":"uint256"}],"name":"LogBidEvent","type":"event","payable":true},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"}],"name":"LogDoneEvent","type":"event","payable":true},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"}],"name":"LogPaymentEvent","type":"event","payable":true},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"}],"name":"LogSettlementEvent","type":"event","payable":true},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"}],"name":"LogPaymentFailedEvent","type":"event","payable":true},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"}],"name":"LogSettlementFailedEvent","type":"event","payable":true},{"type":"fallback","payable":true}]);

// =================================
// END: Web3 deploy code
// =================================

function _zdemo_create_ztoken(tokenName, initialSupply) {
    // =================================
    // START: Web3 deploy code
    // =================================
    var ztoken = ztoken_abi.new(
        initialSupply,
        tokenName,
        {
            from: web3.eth.accounts[0],
            data: '',
            gas: '54700000' // changed
        }, function (e, contract) {
            console.log(e, contract);
            if (typeof contract.address !== 'undefined') {
                console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
            }
        })
    // =================================
    // END: Web3 deploy code
    // =================================
    return ztoken;
}

function _zdemo_get_ztoken(a) {
    return ztoken_abi.at(a)
}

function _zdemo_create_zprivatecontract(tracker, bid_constellation, bid_token, bid_amount, ask_constellation, ask_token, ask_amount) {
    var apk = tracker.keypair.a_pk;
    var r = zsl.getRandomness();
    var bid_address = bid_token.address;
    var ask_address = ask_token.address;

    // =================================
    // START: Web3 deploy code
    // =================================
    var zprivatecontract = zprivatecontract_abi.new(
        apk,
        r,
        bid_constellation,
        bid_address,
        bid_amount,
        ask_constellation,
        ask_address,
        ask_amount,
        {
            privateFor: [ask_constellation], // changed
            from: web3.eth.accounts[0],
            data: '0x60606040526040516112fe3803806112fe833981016040528080519060200190919080519060200190919080518201919060200180519060200190919080519060200190919080518201919060200180519060200190919080519060200190919050505b5b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055505b87600b6000508190555086600e6000508190555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff0219169083021790555084600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff0219169083021790555084600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff0219169083021790555083600160146101000a81548167ffffffffffffffff021916908302179055508560076000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061019357805160ff19168380011785556101c4565b828001600101855582156101c4579182015b828111156101c35782518260005055916020019190600101906101a5565b5b5090506101ef91906101d1565b808211156101eb57600081815060009055506001016101d1565b5090565b505081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff0219169083021790555081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff0219169083021790555080600360146101000a81548167ffffffffffffffff021916908302179055508260086000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106102b557805160ff19168380011785556102e6565b828001600101855582156102e6579182015b828111156102e55782518260005055916020019190600101906102c7565b5b50905061031191906102f3565b8082111561030d57600081815060009055506001016102f3565b5090565b50506000600060146101000a81548160ff021916908302179055503373ffffffffffffffffffffffffffffffffffffffff167fff2fc9682dd82e89e7e02de136eac388f69e7458384298b0936d259a829af6a485604051808267ffffffffffffffff16815260200191505060405180910390a25b5050505050505050610f638061039b6000396000f360606040523615610103576000357c010000000000000000000000000000000000000000000000000000000090048063091007a6146101055780633042b76e1461012c57806336013189146101a75780634717f698146101ce5780635dec6f70146101f55780636a1abd511461021c5780636ba5ceeb146102345780638da5cb5b146102615780639527f9be1461029a578063aec2393b146102d1578063c19d93fb146102fe578063c7a66eb314610321578063cc4f8c141461035a578063d05afbad146103d5578063dbab221b1461040e578063ef03dd1e14610426578063f2fde38b1461044d578063f496d88214610465578063fabe9f361461049e57610103565b005b61011260048050506104d7565b604051808260001916815260200191505060405180910390f35b61013960048050506104e0565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156101995780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101b46004805050610581565b604051808260001916815260200191505060405180910390f35b6101db600480505061058a565b604051808260001916815260200191505060405180910390f35b6102026004805050610593565b604051808260001916815260200191505060405180910390f35b610232600480803590602001909190505061059c565b005b6102416004805050610819565b604051808267ffffffffffffffff16815260200191505060405180910390f35b61026e6004805050610833565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102b96004808035906020019091908035906020019091905050610859565b60405180821515815260200191505060405180910390f35b6102de60048050506109d3565b604051808267ffffffffffffffff16815260200191505060405180910390f35b61030b60048050506109ed565b6040518082815260200191505060405180910390f35b61032e6004805050610a00565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103676004805050610a26565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156103c75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e26004805050610ac7565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104246004808035906020019091905050610aed565b005b6104336004805050610d68565b604051808260001916815260200191505060405180910390f35b6104636004808035906020019091905050610d71565b005b6104726004805050610dfc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104ab6004805050610e22565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600a6000505481565b60076000508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105795780601f1061054e57610100808354040283529160200191610579565b820191906000526020600020905b81548152906001019060200180831161055c57829003601f168201915b505050505081565b600d6000505481565b60096000505481565b600b6000505481565b60006000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105fc57610002565b6106176001600060149054906101000a900460ff1614610e48565b600283600c6000505461063f600160149054906101000a900467ffffffffffffffff16610e58565b6040518084600019168152602001836000191681526020018280519060200190808383829060006004602084601f0104600302600f01f15090500193505050506020604051808303816000866161da5a03f115610002575050604051805190602001509150600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638630786583604051827c010000000000000000000000000000000000000000000000000000000002815260040180826000191681526020019150506020604051808303816000876161da5a03f1156100025750505060405180519060200150905080156107b35782600a600050819055506002600060146101000a81548160ff021916908302179055503373ffffffffffffffffffffffffffffffffffffffff167f6c1576fb076bed036cd08dac98156e394fab225838376081753020857084ddea60405180905060405180910390a2610813565b6004600060146101000a81548160ff021916908302179055503373ffffffffffffffffffffffffffffffffffffffff167f336cc5227bd5defbf32bddcc8249a2259895087ef005a131b57e9af0f94343ed60405180905060405180910390a25b5b505050565b600360149054906101000a900467ffffffffffffffff1681565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006108b5600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610e48565b6108d06000600060149054906101000a900460ff1614610e48565b82600c6000508190555081600f600050819055506002600e60005054600f60005054604051808360001916815260200182600019168152602001925050506020604051808303816000866161da5a03f11561000257505060405180519060200150600d6000508190555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055506001600060146101000a81548160ff021916908302179055503373ffffffffffffffffffffffffffffffffffffffff167f6a2175dc1fe200a7edb14cc691d97f643198113419adb9233a1b4c5cb8aa53d360405180905060405180910390a2600190506109cd565b92915050565b600160149054906101000a900467ffffffffffffffff1681565b600060149054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60086000508054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610abf5780601f10610a9457610100808354040283529160200191610abf565b820191906000526020600020905b815481529060010190602001808311610aa257829003601f168201915b505050505081565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006000610b4b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610e48565b610b666002600060149054906101000a900460ff1614610e48565b600283600b60005054610b8e600360149054906101000a900467ffffffffffffffff16610e58565b6040518084600019168152602001836000191681526020018280519060200190808383829060006004602084601f0104600302600f01f15090500193505050506020604051808303816000866161da5a03f115610002575050604051805190602001509150600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638630786583604051827c010000000000000000000000000000000000000000000000000000000002815260040180826000191681526020019150506020604051808303816000876161da5a03f115610002575050506040518051906020015090508015610d0257826009600050819055506003600060146101000a81548160ff021916908302179055503373ffffffffffffffffffffffffffffffffffffffff167f3e67459cc1f023920040097861ffd0b6de230e415fe2415e7dafb515a3005ae960405180905060405180910390a2610d62565b6005600060146101000a81548160ff021916908302179055503373ffffffffffffffffffffffffffffffffffffffff167fc00fac96dee2f35b8fec0d57bf0887d7a2c82034746a0b3328994d2e9bac97c760405180905060405180910390a25b5b505050565b600c6000505481565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610dcd57610002565b80600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055505b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b801515610e5457610002565b5b50565b60206040519081016040528060008152602001506000602060405190810160405280600081526020015060008478010000000000000000000000000000000000000000000000000292506008604051805910610eb15750595b908082528060200260200182016040528015610ec8575b509150600090505b6008811015610f535782816007036008811015610002571a7f01000000000000000000000000000000000000000000000000000000000000000282828151811015610002579060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b8080600101915050610ed0565b819350610f5b565b50505091905056',
            gas: '54700000' // changed
        }, function (e, contract) {
            console.log(e, contract);
            if (typeof contract.address !== 'undefined') {
                console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
            }
        })
    // =================================
    // END: Web3 deploy code
    // =================================

    return zprivatecontract;
}


function _zdemo_get_zprivatecontract(a) {
    return zprivatecontract_abi.at(a);
}

function _zdemo_accept_bid(tracker, zprivatecontract) {
    var counterparty = zprivatecontract.bidderConstellationAddress();
    zprivatecontract.acceptBid(tracker.keypair.a_pk, zsl.getRandomness(), { from: eth.accounts[0], gas: 54700000, privateFor: [counterparty] });
}

function _zdemo_add_payment_received_by_asker(tracker, zprivatecontract) {
    var rho = zprivatecontract.paymentReceivedByAsker();
    var pk = tracker.keypair.a_pk;
    var value = parseInt(zprivatecontract.bidAmount());
    var cm = zsl.getCommitment(rho, pk, value);
    var note = {};
    note.rho = rho;
    note.value = value;
    note.ztoken = zprivatecontract.bidTokenAddress();
    note.uuid = web3.toHex(web3.sha3(cm, { encoding: 'hex' }));
    tracker.notes[note.uuid] = note;
    return note;
}

function _zdemo_add_payment_received_by_bidder(tracker, zprivatecontract) {
    var rho = zprivatecontract.paymentReceivedByBidder();
    var pk = tracker.keypair.a_pk;
    var value = parseInt(zprivatecontract.askAmount());
    var cm = zsl.getCommitment(rho, pk, value);
    var note = {};
    note.rho = rho;
    note.value = value;
    note.ztoken = zprivatecontract.askTokenAddress();
    note.uuid = web3.toHex(web3.sha3(cm, { encoding: 'hex' }));
    tracker.notes[note.uuid] = note;
    return note;
}

// Send a single note as shielded transfer, with change going back to the sender.
function _zdemo_submit_funds_to_contract(tracker, ztoken, zprivatecontract, noteId, amount, recipient_apk, recipient) {

    var empty_uncles = ["0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100"];
    var note = tracker.notes[noteId];

    if (note.value < amount) {
        console.log("Cannot transfer " + amount + " as note value of " + note.value + " is too small.");
        return;
    }

    var change = note.value - amount;
    var cm = zsl.getCommitment(note.rho, tracker.keypair.a_pk, note.value);
    var witnesses = ztoken.getWitness(cm);
    var treeIndex = parseInt(witnesses[0]);
    var authPath = witnesses[1];
    var tmpKeypair = zsl.getNewAddress();
    var out_rho_1 = zsl.getRandomness();
    var out_rho_2 = zsl.getRandomness();

    console.log("***************************************************************");
    console.log("[*] Generating proof for shielded transfer");
    var start = new Date();
    var result = zsl.createShieldedTransfer(
        note.rho, tracker.keypair.a_sk, note.value, treeIndex, authPath,
        zsl.getRandomness(), tmpKeypair.a_sk, 0, 0, empty_uncles,
        out_rho_1, recipient_apk, amount,
        out_rho_2, tracker.keypair.a_pk, change);
    var elapsed = new Date() - start;
    console.log("[*] Generated in " + elapsed / 1000 + " secs");

    var n1 = {};
    n1.value = amount;
    n1.rho = out_rho_1;
    n1.uuid = web3.toHex(web3.sha3(result.out_cm_1, { encoding: 'hex' }));
    n1.ztoken = ztoken.address;
    console.log("[*] Recipient receives note of " + amount + " " + ztoken.name())

    var n2 = {};
    n2.value = change;
    n2.rho = out_rho_2;
    n2.uuid = web3.toHex(web3.sha3(result.out_cm_2, { encoding: 'hex' }));
    n2.ztoken = ztoken.address;
    console.log("[*] Sender receives change of " + change + " " + ztoken.name())

    var events = ztoken.allEvents();
    events.watch(function (error, event) {
        if (error) {
            console.log("Error: " + error);
        } else {
            var s = JSON.stringify(event.args);
            console.log(event.event + " : " + s);
            if (event.event == 'LogShieldedTransfer' && event.args['uuid_1'] == n1.uuid && event.args['uuid_2'] == n2.uuid) {
                console.log("[*] Shielded transfer added to z-contract.");
                events.stopWatching();

                // This note belongs to the recipient. In this POC, it will be another node, so we don't track it here.
                // tracker.notes[n1.uuid] = n1;

                // This note is the change note which should be tracked.
                tracker.notes[n2.uuid] = n2;

                // Input note is spent.
                tracker.spent[noteId] = note;
                delete (tracker.notes[noteId]);

                // Notify private contract about payment
                if (recipient == zprivatecontract.askerConstellationAddress()) {
                    console.log("[*] Submitting payment details to private contract");
                    zprivatecontract.submitPaymentDetails(
                        n1.rho,
                        { from: eth.accounts[0], gas: 54700000, privateFor: [recipient] });
                } else {
                    console.log("[*] Submitting settlement details to private contract");
                    zprivatecontract.submitSettlementDetails(
                        n1.rho,
                        { from: eth.accounts[0], gas: 54700000, privateFor: [recipient] });
                }
                console.log("***************************************************************");
            }
        }
    });

    console.log("[*] Submit shielded transfer to z-contract...");
    var anchor = ztoken.root();
    ztoken.shieldedTransfer(
        result.proof, anchor,
        result.in_spend_nf_1, result.in_spend_nf_2,
        result.out_send_nf_1, result.out_send_nf_2,
        result.out_cm_1, result.out_cm_2,
        { from: eth.accounts[0], gas: 5470000 });
    return "Waiting for log event...";
}


function _zdemo_submit_payment(tracker, ztoken, zprivatecontract, noteId) {
    return _zdemo_submit_funds_to_contract(tracker, ztoken, zprivatecontract, noteId,
        parseInt(zprivatecontract.bidAmount()),
        zprivatecontract.askerApk(),
        zprivatecontract.askerConstellationAddress());
}


function _zdemo_submit_settlement(tracker, ztoken, zprivatecontract, noteId) {
    return _zdemo_submit_funds_to_contract(tracker, ztoken, zprivatecontract, noteId,
        parseInt(zprivatecontract.askAmount()),
        zprivatecontract.bidderApk(),
        zprivatecontract.bidderConstellationAddress());
}


function _zdemo_watch_events(zprivatecontract) {
    var events = zprivatecontract.allEvents();
    events.watch(function (error, event) {
        if (error) {
            console.log("Error: " + error);
        } else {
            var s = JSON.stringify(event.args)
            console.log(event.event + " : " + s);
            // take action
            if (event.event == 'LogDoneEvent') {
                console.log("***************************************************************");
                console.log("* TRADE AGREED");
                if (zprivatecontract.bidder() == web3.eth.accounts[0]) {
                    var tmp = _zdemo_get_ztoken(zprivatecontract.bidTokenAddress())
                    console.log
                    console.log("* Please send payment of " + zprivatecontract.bidAmount() + " " + tmp.name() + " to private contract.");
                    console.log("* Counterparty's constellation address: " + zprivatecontract.askerConstellationAddress());
                    console.log("***************************************************************");
                } else {
                    console.log("* Waiting for payment from counterparty.");
                    console.log("***************************************************************");
                }
            }
            else if (event.event == 'LogPaymentEvent') {
                console.log("***************************************************************");
                console.log("* PAYMENT RECEIVED");
                if (zprivatecontract.asker() == web3.eth.accounts[0]) {
                    var tmp = _zdemo_get_ztoken(zprivatecontract.askTokenAddress())
                    console.log("* Please send settlement of " + zprivatecontract.askAmount() + " " + tmp.name() + " to private contract.");
                    console.log("* Counterparty's constellation address: " + zprivatecontract.bidderConstellationAddress());
                    console.log("***************************************************************");
                } else {
                    console.log("* Waiting for settlement from counterparty.");
                    console.log("***************************************************************");
                }
            } else if (event.event == 'LogSettlementEvent') {
                console.log("***************************************************************");
                console.log("* TRADE FINISHED");
                var note;
                if (zprivatecontract.asker() == web3.eth.accounts[0]) {
                    note = _zdemo_add_payment_received_by_asker(tracker, zprivatecontract);
                    // for (var key in note){
                    //     console.log( "* " + key + ": " + note[key] );
                    // }
                    //console.log(JSON.stringify(note, null, 4))
                } else {
                    var note = _zdemo_add_payment_received_by_bidder(tracker, zprivatecontract);
                }
                console.log("* Tracker received shielded note with uuid: " + note.uuid)
                console.log("***************************************************************");
            }
        }
    });
    return events;
}


// Namespace for zdemo, using module pattern.

var zdemo = (function() {
    return {
        create_ztoken: function(tokenName, initialSupply) {
            return _zdemo_create_ztoken(tokenName, initialSupply);
        },
        get_ztoken: function(a) {
            return _zdemo_get_ztoken(a);
        },
        create_zprivatecontract: function(tracker, bid_constellation, bid_token, bid_amount, ask_constellation, ask_token, ask_amount) {
            return _zdemo_create_zprivatecontract(tracker, bid_constellation, bid_token, bid_amount, ask_constellation, ask_token, ask_amount);
        },
        get_zprivatecontract: function(a) {
            return _zdemo_get_zprivatecontract(a);
        },
        accept_bid: function(tracker, zprivatecontract) {
            return _zdemo_accept_bid(tracker, zprivatecontract);
        },
        submit_payment: function(tracker, ztoken, zprivatecontract, noteId) {
            return _zdemo_submit_payment(tracker, ztoken, zprivatecontract, noteId);
        },
        submit_settlement: function(tracker, ztoken, zprivatecontract, noteId) {
            return _zdemo_submit_settlement(tracker, ztoken, zprivatecontract, noteId);
        },
        watch_events: function(zprivatecontract) {
            return _zdemo_watch_events(zprivatecontract);
        }
    };
})();


// Note tracker

function ztracker() {
    this.keypair = zsl.getNewAddress();
    this.notes = {};
    this.spent = {};
}

ztracker.prototype.shield = function (ztoken, value) {
    var rho = zsl.getRandomness();
    var pk = this.keypair.a_pk;
    console.log("***************************************************************");
    console.log("[*] Generating proof for shielding");
    var start = new Date();
    var result = zsl.createShielding(rho, pk, value);
    var elapsed = new Date() - start;
    console.log("[*] Generated in " + elapsed / 1000 + " secs");

    var uuid = web3.toHex(web3.sha3(result.cm, { encoding: 'hex' }));

    var that = this;
    var events = ztoken.allEvents();
    events.watch(function (error, event) {
        if (error) {
            console.log("Error: " + error);
        } else {
            var s = JSON.stringify(event.args);
            console.log(event.event + " : " + s);
            if (event.event == 'LogShielding' && event.args['uuid'] == uuid) {
                console.log("[*] Shielding added to z-contract.");
                console.log("***************************************************************");
                events.stopWatching();
                var note = {};
                note.rho = rho;
                note.value = value;
                note.uuid = uuid;
                note.ztoken = ztoken.address;
                that.notes[uuid] = note;
            }
        }
    });

    ztoken.shield(result.proof, result.send_nf, result.cm, value, { from: eth.accounts[0], gas: 5470000 });
    return "Waiting for log event...";
}


ztracker.prototype.unshield = function (uuid) {
    var note = this.notes[uuid];

    var a = note.ztoken;
    var ztoken = ztoken_abi.at(a);

    var cm = zsl.getCommitment(note.rho, this.keypair.a_pk, note.value);
    var witnesses = ztoken.getWitness(cm)
    var treeIndex = parseInt(witnesses[0])
    var authPath = witnesses[1]

    console.log("***************************************************************");
    console.log("[*] Generating proof for unshielding");
    var start = new Date();
    var result = zsl.createUnshielding(note.rho, this.keypair.a_sk, note.value, treeIndex, authPath)
    var elapsed = new Date() - start;
    console.log("[*] Generated in " + elapsed / 1000 + " secs");

    var that = this;

    var events = ztoken.allEvents();
    events.watch(function (error, event) {
        if (error) {
            console.log("Error: " + error);
        } else {
            var s = JSON.stringify(event.args);
            console.log(event.event + " : " + s);
            if (event.event == 'LogUnshielding' && event.args['uuid'] == uuid) {
                console.log("[*] Unshielding added to z-contract.");
                console.log("***************************************************************");
                events.stopWatching();
                that.spent[uuid] = note;
                delete (that.notes[uuid]);
            }
        }
    });

    var rt = ztoken.root();
    ztoken.unshield(result.proof, result.spend_nf, cm, rt, note.value, { from: eth.accounts[0], gas: 54700000 })
    return "Waiting for log event...";
}


ztracker.prototype.list = function (ztoken, amount) {
    var result = [];
    var name = ztoken.name();
    var addr = ztoken.address;
    if (amount == undefined) {
        amount = 0;
    }
    for (var uuid in this.notes) {
        var note = this.notes[uuid];
        if (addr == note.ztoken && (note.value >= amount)) {
            result.push(note);
        }
    }

    console.log("***************************************************************");
    console.log("Found " + result.length + " " + name + " notes >= " + amount)
    console.log(JSON.stringify(result, null, 4))
    console.log("***************************************************************");
}


ztracker.prototype.balance = function (ztoken) {
    var result = 0;
    var name = ztoken.name();
    var addr = ztoken.address;
    for (var uuid in this.notes) {
        var note = this.notes[uuid];
        if (addr == note.ztoken) {
            result += note.value;
        }
    }
    console.log("***************************************************************");
    console.log("Shielded balance of " + name + " = " + result);
    console.log("***************************************************************");
}

// Basic persistence of tracker for demo purposes.
ztracker.prototype.load = function (filename) {
    var x = JSON.parse(zsl.loadTracker(filename));
    this.keypair = x.keypair;
    this.notes = x.notes;
    this.spent = x.spent;
    return true;
}

// TODO: Post-demo, filename should be sanitized.
ztracker.prototype.save = function (filename) {
    return zsl.saveTracker(filename, JSON.stringify(this))
}
